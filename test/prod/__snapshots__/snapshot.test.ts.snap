// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`apiGwKdsLambdaStack 1`] = `
{
  "Conditions": {
    "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region",
            },
            "cn-north-1",
          ],
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region",
            },
            "cn-northwest-1",
          ],
        },
      ],
    },
  },
  "Outputs": {
    "Exportproddatastrsampleapigwkdslambdastacklambdaloglivetailclicommand": {
      "Export": {
        "Name": "prod-data-str-sample-apigw-kds-lambda-stack-lambda-log-live-tail-cli-command",
      },
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws logs start-live-tail --log-group-identifiers arn:aws:logs:ap-northeast-1:",
            {
              "Ref": "AWS::AccountId",
            },
            ":log-group:",
            {
              "Ref": "KdsLambdaConsumerLambdaLogGroup4A5C0225",
            },
          ],
        ],
      },
    },
    "KdsApiGwProducerEndpoint56011AC5": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "KdsApiGwProducerA4899BB0",
            },
            ".execute-api.ap-northeast-1.",
            {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            {
              "Ref": "KdsApiGwProducerDeploymentStagev1E9BA3322",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "KdsApiGwProducerA4899BB0": {
      "Properties": {
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL",
          ],
        },
        "Name": "Default",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "KdsApiGwProducerAPIGWUrlParameterF380F99B": {
      "Properties": {
        "Name": "/apiGwKds/prod-data-str-sample-apigw-kds-lambda-stack/url",
        "Tags": {
          "StackName": "prod-data-str-sample-apigw-kds-lambda-stack",
        },
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Ref": "KdsApiGwProducerA4899BB0",
              },
              ".execute-api.ap-northeast-1.",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              {
                "Ref": "KdsApiGwProducerDeploymentStagev1E9BA3322",
              },
              "/",
            ],
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "KdsApiGwProducerAccount3A6F6013": {
      "DeletionPolicy": "Retain",
      "DependsOn": [
        "KdsApiGwProducerA4899BB0",
      ],
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "KdsApiGwProducerCloudWatchRole5827EB53",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "KdsApiGwProducerCloudWatchRole5827EB53": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "KdsApiGwProducerDeploymentE4B8A8B4b244705509cd0f12787e63376e8c5dfe": {
      "DependsOn": [
        "KdsApiGwProducerstreamsrecordPUTF0440163",
        "KdsApiGwProducerstreamsrecordB638860A",
        "KdsApiGwProducerstreamsrecordsPUT6E0B114F",
        "KdsApiGwProducerstreamsrecordsB801BED7",
        "KdsApiGwProducerstreams52DC4236",
      ],
      "Properties": {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": {
          "Ref": "KdsApiGwProducerA4899BB0",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "KdsApiGwProducerDeploymentStagev1E9BA3322": {
      "DependsOn": [
        "KdsApiGwProducerAccount3A6F6013",
      ],
      "Properties": {
        "DeploymentId": {
          "Ref": "KdsApiGwProducerDeploymentE4B8A8B4b244705509cd0f12787e63376e8c5dfe",
        },
        "MethodSettings": [
          {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "MetricsEnabled": false,
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": {
          "Ref": "KdsApiGwProducerA4899BB0",
        },
        "StageName": "v1",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
        "TracingEnabled": false,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "KdsApiGwProducerRole867BA55B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "KdsApiGwProducerRoleDefaultPolicy3FD45C37": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:ListShards",
                "kinesis:PutRecord",
                "kinesis:PutRecords",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KdsDataStream7B329BF0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "KdsApiGwProducerRoleDefaultPolicy3FD45C37",
        "Roles": [
          {
            "Ref": "KdsApiGwProducerRole867BA55B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "KdsApiGwProducerclientErrorAlarmC0B26A54": {
      "Properties": {
        "AlarmName": "apigw-client-error-alarm-prod-data-str-sample-apigw-kds-lambda-stack",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "Dimensions": [
          {
            "Name": "ApiName",
            "Value": "Default",
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "4XXError",
        "Namespace": "AWS/ApiGateway",
        "Period": 60,
        "Statistic": "Sum",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "KdsApiGwProducerserverErrorAlarmD72EF5DF": {
      "Properties": {
        "AlarmName": "apigw-server-error-alarm-prod-data-str-sample-apigw-kds-lambda-stack",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "Dimensions": [
          {
            "Name": "ApiName",
            "Value": "Default",
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "5XXError",
        "Namespace": "AWS/ApiGateway",
        "Period": 60,
        "Statistic": "Sum",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "KdsApiGwProducerstreams52DC4236": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "KdsApiGwProducerA4899BB0",
            "RootResourceId",
          ],
        },
        "PathPart": "streams",
        "RestApiId": {
          "Ref": "KdsApiGwProducerA4899BB0",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "KdsApiGwProducerstreamsrecordB638860A": {
      "Properties": {
        "ParentId": {
          "Ref": "KdsApiGwProducerstreams52DC4236",
        },
        "PathPart": "record",
        "RestApiId": {
          "Ref": "KdsApiGwProducerA4899BB0",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "KdsApiGwProducerstreamsrecordPUTF0440163": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "PUT",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "KdsApiGwProducerRole867BA55B",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseTemplates": {
                "application/json": "
{
"Code": "200",
"Message": "OK",
"SequenceNumber": "$input.path('$.sequnceNumber')",
"shardId": "$input.path('$.shardId')",
}",
              },
              "SelectionPattern": "200",
              "StatusCode": "200",
            },
            {
              "ResponseTemplates": {
                "application/json": "
{
"Code": "400",
"Message": "KinesisClientError"
}",
              },
              "SelectionPattern": "4\\d{2}",
              "StatusCode": "400",
            },
            {
              "ResponseTemplates": {
                "application/json": "
{
#set($inputRoot = $input.path('$'))
"Code": "500",
"Message": "$inputRoot.errorMessage",
"ErrorType": "$inputRoot.errorType",
"StackTrace": "$inputRoot.stackTrace"
}",
              },
              "SelectionPattern": "5d{2}",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": {
            "integration.request.header.Content-Type": "'x-amz-json-1.1'",
          },
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "
{
"StreamName": "",
                  {
                    "Ref": "KdsDataStream7B329BF0",
                  },
                  "",
"Data": "$util.base64Encode($input.path('$.data'))",
"PartitionKey": "$input.path('$.PartitionKey')"
}",
                ],
              ],
            },
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:ap-northeast-1:kinesis:action/PutRecord",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
          },
          {
            "StatusCode": "400",
          },
          {
            "StatusCode": "500",
          },
        ],
        "ResourceId": {
          "Ref": "KdsApiGwProducerstreamsrecordB638860A",
        },
        "RestApiId": {
          "Ref": "KdsApiGwProducerA4899BB0",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "KdsApiGwProducerstreamsrecordsB801BED7": {
      "Properties": {
        "ParentId": {
          "Ref": "KdsApiGwProducerstreams52DC4236",
        },
        "PathPart": "records",
        "RestApiId": {
          "Ref": "KdsApiGwProducerA4899BB0",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "KdsApiGwProducerstreamsrecordsPUT6E0B114F": {
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "PUT",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "KdsApiGwProducerRole867BA55B",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseTemplates": {
                "application/json": "
{
"Code": "200",
"Message": "OK",
"FailedRecordCount": "$input.path('$.FailedRecordCount')"
}
#if($input.path('$.FailedRecordCount') != '0')
#set($context.responseOverride.status = 500)
#end",
              },
              "SelectionPattern": "200",
              "StatusCode": "200",
            },
            {
              "ResponseTemplates": {
                "application/json": "
{
"Code": "400",
"Message": "KinesisClientError"
}",
              },
              "SelectionPattern": "4\\d{2}",
              "StatusCode": "400",
            },
            {
              "ResponseTemplates": {
                "application/json": "
{
"Code": "500",
"Message": "KinesisServerError"
}",
              },
              "SelectionPattern": "5\\d{2}",
              "StatusCode": "500",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": {
            "integration.request.header.Content-Type": "'x-amz-json-1.1'",
          },
          "RequestTemplates": {
            "application/json": {
              "Fn::Join": [
                "",
                [
                  "
{
"StreamName": "",
                  {
                    "Ref": "KdsDataStream7B329BF0",
                  },
                  "",
"Records": [
#foreach($elem in $input.path('$.records'))
  {
    "Data": "$util.base64Encode($elem.data)",
    "PartitionKey": "$elem.PartitionKey"
  }#if($foreach.hasNext),#end
  #end
]
}",
                ],
              ],
            },
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:ap-northeast-1:kinesis:action/PutRecords",
              ],
            ],
          },
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
          },
          {
            "StatusCode": "400",
          },
          {
            "StatusCode": "500",
          },
        ],
        "ResourceId": {
          "Ref": "KdsApiGwProducerstreamsrecordsB801BED7",
        },
        "RestApiId": {
          "Ref": "KdsApiGwProducerA4899BB0",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "KdsCWDashboradDashboard45FE56EE": {
      "Properties": {
        "DashboardBody": {
          "Fn::Join": [
            "",
            [
              "{"start":"-PT1H","widgets":[{"type":"text","width":24,"height":2,"x":0,"y":0,"properties":{"markdown":"# CloudWatch Alarm"}},{"type":"alarm","width":24,"height":3,"x":0,"y":2,"properties":{"title":"Alarm Status","alarms":["",
              {
                "Fn::GetAtt": [
                  "KdsDataStreamwriteProvisionedAlarmD89876F3",
                  "Arn",
                ],
              },
              "","",
              {
                "Fn::GetAtt": [
                  "KdsDataStreamreadProvisionedAlarm3EE73403",
                  "Arn",
                ],
              },
              "","",
              {
                "Fn::GetAtt": [
                  "KdsDataStreamiteratorAgeAlarm04D03A9D",
                  "Arn",
                ],
              },
              "","",
              {
                "Fn::GetAtt": [
                  "KdsApiGwProducerclientErrorAlarmC0B26A54",
                  "Arn",
                ],
              },
              "","",
              {
                "Fn::GetAtt": [
                  "KdsApiGwProducerserverErrorAlarmD72EF5DF",
                  "Arn",
                ],
              },
              "","",
              {
                "Fn::GetAtt": [
                  "KdsLambdaConsumerlambdaErrorsAlarm6629D4EF",
                  "Arn",
                ],
              },
              "","",
              {
                "Fn::GetAtt": [
                  "KdsLambdaConsumerdlqMessagesSentAlarm140B9E7D",
                  "Arn",
                ],
              },
              ""]}},{"type":"text","width":24,"height":15,"x":0,"y":5,"properties":{"markdown":"\\n| サービス       | アラーム名             | 検知される状況                                             | 対応                                                                    |\\n|------------|-------------------|-----------------------------------------------------|-----------------------------------------------------------------------|\\n| KDS        | write-provisioned | Producerの送信量がシャード規定を上回る                             | オンデマンドモードの場合: 自動でスケールアウトのため対応不要<br/>プロビジョンドモードの場合: 自動スケールアウトLambdaが起動 |\\n| KDS        | read-provisioned  | Consumerの読み取り量がシャード規定を上回る<br/>主に複数Consumer構成のケースで発生 | write-provisionedと同じ                                                  |\\n| KDS        | iterator-age      | Producerの送信量 > Consumerの処理量で処理遅延発生                  | Consumerの処理能力を上げるなど<br/>対応手順のリンクを貼る                                   |\\n| APIGW      | client-error      | APIGWで4××エラーが一定数を超える<br/>不正なアクセスによる403エラーなど         | 対応手順のリンクを貼る                                                           |\\n| APIGW      | server-error      | APIGWで5××エラーが一定数を超える<br/>APIGWとKDSの統合エラーやネットワーク遮断など | 基本的にこちらでの対応は不可<br/>未処理レコードが発生していないか確認するなど                             |\\n| Lambda     | errors            | Lambda関数でのエラーが一定数を超える<br/>業務処理の失敗、メモリ不足など           | 対応手順のリンクを貼る                                                           |\\n| Lambda-SQS | dlq-messages-sent | Lambdaでの最大リトライを超える処理失敗により、<br/>未処理レコード発生            | Messageを確認して手動で処理を再実行するなど<br/>対応手順のリンクを貼る                             |\\n| Firehose   | partition-count   | 動的パーティショニング使用時にパーティション数が上限値を超える                     | パーティション作成の実装見直しなど                                                     |\\n| Firehose   | s3-data-freshness | S3配信時に一定以上の配信処理遅延が発生                                | 対応手順のリンクを貼る                                                           |\\n| Firehose   | lambda-errors     | Firehose連携のLambda関数で一定以上のエラー発生                      | 関数の実装見直しなど                                                            |\\n"}},{"type":"text","width":24,"height":4,"x":0,"y":20,"properties":{"markdown":"# API Gateway Metrics\\n## エラー情報ドキュメント\\n- [API Gateway default error responses](https://docs.aws.amazon.com/ja_jp/apigateway/latest/developerguide/supported-gateway-response-types.html)\\n- [KDS PutRecords API Errors](https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecords.html#API_PutRecords_Errors)\\n- [KDS PutRecord API Errors](https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecord.html#API_PutRecord_Errors)\\n"}},{"type":"metric","width":12,"height":8,"x":0,"y":24,"properties":{"view":"timeSeries","title":"エラー発生数 4×× 5××(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/ApiGateway","4XXError","ApiName","Default",{"stat":"Sum"}],["AWS/ApiGateway","5XXError","ApiName","Default",{"stat":"Sum","yAxis":"right"}]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":12,"y":24,"properties":{"view":"timeSeries","title":"レイテンシー(Max, p99, Avg, Min)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/ApiGateway","Latency","ApiName","Default",{"stat":"Maximum"}],["AWS/ApiGateway","Latency","ApiName","Default",{"stat":"p99"}],["AWS/ApiGateway","Latency","ApiName","Default"],["AWS/ApiGateway","Latency","ApiName","Default",{"stat":"Minimum"}]],"yAxis":{"left":{"min":0}},"period":60}},{"type":"text","width":24,"height":2,"x":0,"y":32,"properties":{"markdown":"# Kinesis Metrics"}},{"type":"metric","width":12,"height":8,"x":0,"y":34,"properties":{"view":"timeSeries","title":"書き込み制限エラー数(Sum)と分あたり送信レコードByte(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Kinesis","PutRecords.ThrottledRecords","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"period":60,"stat":"Sum"}],[{"label":"incommingBytes","expression":"e1/60","yAxis":"right"}],["AWS/Kinesis","IncomingBytes","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"stat":"Sum","visible":false,"id":"e1"}]],"yAxis":{"left":{"min":0},"right":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":12,"y":42,"properties":{"view":"timeSeries","title":"読み込み制限エラー数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Kinesis","PutRecords.ThrottledRecords","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              ""]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":0,"y":50,"properties":{"view":"timeSeries","title":"書き込み制限エラー数(Sum)と分あたり送信レコード数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Kinesis","PutRecords.ThrottledRecords","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"period":60,"stat":"Sum"}],[{"label":"incommingRecords","expression":"e1/60","yAxis":"right"}],["AWS/Kinesis","IncomingRecords","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"stat":"Sum","visible":false,"id":"e1"}]],"yAxis":{"left":{"min":0},"right":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":12,"y":42,"properties":{"view":"timeSeries","title":"読み込み制限エラー数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Kinesis","PutRecords.ThrottledRecords","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              ""]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":0,"y":50,"properties":{"view":"timeSeries","title":"書き込み制限エラー数(Sum)と分あたり送信レコード数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Kinesis","PutRecords.ThrottledRecords","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"period":60,"stat":"Sum"}],[{"label":"incommingRecords","expression":"e1/60","yAxis":"right"}],["AWS/Kinesis","IncomingRecords","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"stat":"Sum","visible":false,"id":"e1"}]],"yAxis":{"left":{"min":0},"right":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":12,"y":50,"properties":{"view":"timeSeries","title":"データストリーム内での待機時間(Max, p99, Avg, Min)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Kinesis","GetRecords.IteratorAgeMilliseconds","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"stat":"Maximum"}],["AWS/Kinesis","GetRecords.IteratorAgeMilliseconds","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"stat":"p99"}],["AWS/Kinesis","GetRecords.IteratorAgeMilliseconds","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              ""],["AWS/Kinesis","GetRecords.IteratorAgeMilliseconds","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"stat":"Minimum"}]],"yAxis":{"left":{"min":0}},"period":60}},{"type":"text","width":24,"height":2,"x":0,"y":58,"properties":{"markdown":"# Lambda Metrics"}},{"type":"metric","width":12,"height":8,"x":0,"y":60,"properties":{"view":"timeSeries","title":"関数起動数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Lambda","Invocations","FunctionName","",
              {
                "Ref": "KdsLambdaConsumerLambdaFunc571FC7AA",
              },
              "",{"stat":"Sum"}]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":12,"y":60,"properties":{"view":"timeSeries","title":"関数実行時間(Max, p99, Avg, Min)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Lambda","Duration","FunctionName","",
              {
                "Ref": "KdsLambdaConsumerLambdaFunc571FC7AA",
              },
              "",{"stat":"Maximum"}],["AWS/Lambda","Duration","FunctionName","",
              {
                "Ref": "KdsLambdaConsumerLambdaFunc571FC7AA",
              },
              "",{"stat":"p99"}],["AWS/Lambda","Duration","FunctionName","",
              {
                "Ref": "KdsLambdaConsumerLambdaFunc571FC7AA",
              },
              ""],["AWS/Lambda","Duration","FunctionName","",
              {
                "Ref": "KdsLambdaConsumerLambdaFunc571FC7AA",
              },
              "",{"stat":"Minimum"}]],"yAxis":{"left":{"min":0}},"period":60}},{"type":"metric","width":12,"height":8,"x":0,"y":68,"properties":{"view":"timeSeries","title":"関数同時実行数(Max)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Lambda","ConcurrentExecutions","FunctionName","",
              {
                "Ref": "KdsLambdaConsumerLambdaFunc571FC7AA",
              },
              ""]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Maximum"}},{"type":"metric","width":12,"height":8,"x":12,"y":68,"properties":{"view":"timeSeries","title":"メモリ使用率(Max)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["LambdaInsights","memory_utilization","function_name","",
              {
                "Ref": "KdsLambdaConsumerLambdaFunc571FC7AA",
              },
              "",{"stat":"Maximum"}]],"yAxis":{"left":{"min":0}},"period":60}},{"type":"metric","width":12,"height":8,"x":0,"y":76,"properties":{"view":"timeSeries","title":"スロットリング発生数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Lambda","Errors","FunctionName","",
              {
                "Ref": "KdsLambdaConsumerLambdaFunc571FC7AA",
              },
              "",{"stat":"Sum"}]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":12,"y":76,"properties":{"view":"timeSeries","title":"エラー数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Lambda","Errors","FunctionName","",
              {
                "Ref": "KdsLambdaConsumerLambdaFunc571FC7AA",
              },
              "",{"stat":"Sum"}]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":0,"y":84,"properties":{"view":"timeSeries","title":"バッチサイズ：関数あたりの処理レコード数(Max, Avg, Min)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["Custom/LambdaMetrics","LambdaBatchSize","functionName","",
              {
                "Ref": "KdsLambdaConsumerLambdaFunc571FC7AA",
              },
              "",{"stat":"Maximum"}],["Custom/LambdaMetrics","LambdaBatchSize","functionName","",
              {
                "Ref": "KdsLambdaConsumerLambdaFunc571FC7AA",
              },
              ""],["Custom/LambdaMetrics","LambdaBatchSize","functionName","",
              {
                "Ref": "KdsLambdaConsumerLambdaFunc571FC7AA",
              },
              "",{"stat":"Minimum"}]],"yAxis":{"left":{"min":0},"right":{"min":0}}}},{"type":"metric","width":12,"height":8,"x":0,"y":92,"properties":{"view":"timeSeries","title":"DLQ送信メッセージ数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/SQS","NumberOfMessagesSent","QueueName","",
              {
                "Fn::GetAtt": [
                  "KdsLambdaConsumerKinesisDeadLetterQueue4D912974",
                  "QueueName",
                ],
              },
              "",{"stat":"Sum"}]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"text","width":24,"height":1,"x":0,"y":100,"properties":{"markdown":"# Logs"}},{"type":"text","width":12,"height":12,"x":0,"y":101,"properties":{"markdown":"# Producer\\n### Producerスクリプトのログ情報\\n- Success_Requests: 送信成功したリクエスト数, 「Success_Requests * レコード数(/request) = Success_Records」なら欠損レコードなし\\n- Retried_Requests: リトライしたリクエスト数\\n- Failed_Requests: 送信できなかったリクエスト数, １つでもあれば欠損あり\\n\\n### Logs Insight Queryサンプル\\n#### カウント\\n\`\`\`\\nfields @message |\\nparse @message \\"SUCCESS\\" as @Success |\\nparse @message \\"RETRY\\" as @Retry |\\nparse @message \\"FAILED\\" as @Failed |\\nstats count(@Success) as Success_Requests, count(@Retry) as Retried_Requests, count(@Failed) as Failed_Requests\\n\`\`\`\\n#### エラーログ詳細確認\\n\`\`\`\\nfields @message |\\nparse @message like \\"Request failed with status code\\"\\n\`\`\`\\n\\n### LogGroup\\n[/test/script/apiGwPutRecord](https://ap-northeast-1.console.aws.amazon.com/cloudwatch/home?region=ap-northeast-1#logsV2:log-groups/log-group/$252Ftest$252Fscript$252FapiGwPutRecord)\\n[/test/script/apiGwPutRecords](https://ap-northeast-1.console.aws.amazon.com/cloudwatch/home?region=ap-northeast-1#logsV2:log-groups/log-group/$252Ftest$252Fscript$252FapiGwPutRecords)\\n[/test/script/sdkPutRecords](https://ap-northeast-1.console.aws.amazon.com/cloudwatch/home?region=ap-northeast-1#logsV2:log-groups/log-group/$252Ftest$252Fscript$252FsdkPutRecords)\\n        "}},{"type":"text","width":12,"height":12,"x":12,"y":101,"properties":{"markdown":"# Consumer\\n### Lambda関数ログ情報\\n- Success_Records: 処理が正常に完了したレコード数\\n- Retried_Records: DynamoDBのPK重複エラー数\\n- Failed_Records: レコード重複以外のエラー数(DynamoDBのスロットリングなど), リトライ対象\\n\\n### Logs Insight Queryサンプル\\n#### カウント\\n\`\`\`\\nfields @message |\\nparse @message \\"SUCCESS\\" as @Success |\\nparse @message \\"RETRY\\" as @Retry |\\nparse @message \\"FAILED\\" as @Failed |\\nstats count(@Success) as Success_Records, count(@Retry) as Retried_Records, count(@Failed) as Failed_Records\\n\`\`\`\\n#### エラーログ詳細確認\\n\`\`\`\\nfields @message |\\nparse @message like \\"FAILED\\"\\n\`\`\`\\n\\n### LogGroup\\n[",
              {
                "Fn::GetAtt": [
                  "KdsLambdaConsumerLambdaFuncLogRetentionF79B65AA",
                  "LogGroupName",
                ],
              },
              "](https://ap-northeast-1.console.aws.amazon.com/cloudwatch/home?region=ap-northeast-1#logsV2:log-groups/log-group/$252Ftest$252Fscript$252FapiGwPutRecord)\\n        "}}]}",
            ],
          ],
        },
        "DashboardName": "prod-data-str-sample-apigw-kds-lambda-stack-dashboard-ap-northeast-1",
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "KdsDataStream7B329BF0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue",
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis",
            },
          ],
        },
        "StreamModeDetails": {
          "StreamMode": "PROVISIONED",
        },
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
      "UpdateReplacePolicy": "Delete",
    },
    "KdsDataStreamiteratorAgeAlarm04D03A9D": {
      "Properties": {
        "AlarmName": "kds-iterator-age-alarm-prod-data-str-sample-apigw-kds-lambda-stack",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": [
          {
            "Name": "StreamName",
            "Value": {
              "Ref": "KdsDataStream7B329BF0",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "GetRecords.IteratorAgeMilliseconds",
        "Namespace": "AWS/Kinesis",
        "Period": 60,
        "Statistic": "Sum",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "KdsDataStreamparameter9E23EE0A": {
      "Properties": {
        "Name": "/prod-data-str-sample-apigw-kds-lambda-stack/stream/name",
        "Tags": {
          "StackName": "prod-data-str-sample-apigw-kds-lambda-stack",
        },
        "Type": "String",
        "Value": {
          "Ref": "KdsDataStream7B329BF0",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "KdsDataStreamreadProvisionedAlarm3EE73403": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::GetAtt": [
              "KdsScaleOutLambda2LambdaFuncC6EB0D2A",
              "Arn",
            ],
          },
        ],
        "AlarmName": "kds-read-provisioned-alarm-prod-data-str-sample-apigw-kds-lambda-stack",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": [
          {
            "Name": "StreamName",
            "Value": {
              "Ref": "KdsDataStream7B329BF0",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "ReadProvisionedThroughputExceeded",
        "Namespace": "AWS/Kinesis",
        "Period": 60,
        "Statistic": "Sum",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
        "Threshold": 500,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "KdsDataStreamwriteProvisionedAlarmD89876F3": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::GetAtt": [
              "KdsScaleOutLambda1LambdaFuncB992ECA1",
              "Arn",
            ],
          },
        ],
        "AlarmName": "kds-write-provisioned-alarm-prod-data-str-sample-apigw-kds-lambda-stack",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": [
          {
            "Name": "StreamName",
            "Value": {
              "Ref": "KdsDataStream7B329BF0",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "WriteProvisionedThroughputExceeded",
        "Namespace": "AWS/Kinesis",
        "Period": 60,
        "Statistic": "Sum",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
        "Threshold": 500,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "KdsLambdaConsumerCustomLayerC00DB53B": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "CompatibleArchitectures": [
          "x86_64",
          "arm64",
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
      },
      "Type": "AWS::Lambda::LayerVersion",
      "UpdateReplacePolicy": "Delete",
    },
    "KdsLambdaConsumerKinesisDeadLetterQueue4D912974": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "KdsLambdaConsumerLambdaFunc571FC7AA": {
      "DependsOn": [
        "KdsLambdaConsumerLambdaFuncServiceRoleDefaultPolicy948474E5",
        "KdsLambdaConsumerLambdaFuncServiceRoleCF9C7104",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "FUNCTION_NAME": "Stack-kds-consumer-func",
            "METRIC_NAME": "LambdaBatchSize",
            "NAMESPACE": "Custom/LambdaMetrics",
            "TABLE_NAME": {
              "Ref": "KdsLambdaConsumerTableACA57DBE",
            },
          },
        },
        "FunctionName": "Stack-kds-consumer-func",
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "KdsLambdaConsumerCustomLayerC00DB53B",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "SystemLogLevel": "WARN",
        },
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "KdsLambdaConsumerLambdaFuncServiceRoleCF9C7104",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
        "Timeout": 180,
        "TracingConfig": {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "KdsLambdaConsumerLambdaFuncEventSourceMapping50E5FCE1": {
      "Properties": {
        "BatchSize": 300,
        "BisectBatchOnFunctionError": true,
        "DestinationConfig": {
          "OnFailure": {
            "Destination": {
              "Fn::GetAtt": [
                "KdsLambdaConsumerKinesisDeadLetterQueue4D912974",
                "Arn",
              ],
            },
          },
        },
        "Enabled": true,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "KdsDataStream7B329BF0",
            "Arn",
          ],
        },
        "FilterCriteria": {
          "Filters": [
            {
              "Pattern": "{"data":{"notificationFlag":[true]}}",
            },
          ],
        },
        "FunctionName": {
          "Ref": "KdsLambdaConsumerLambdaFunc571FC7AA",
        },
        "FunctionResponseTypes": [
          "ReportBatchItemFailures",
        ],
        "MaximumBatchingWindowInSeconds": 3,
        "MaximumRecordAgeInSeconds": 500,
        "MaximumRetryAttempts": 5,
        "ParallelizationFactor": 1,
        "StartingPosition": "TRIM_HORIZON",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "KdsLambdaConsumerLambdaFuncLogRetentionF79B65AA": {
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "KdsLambdaConsumerLambdaFunc571FC7AA",
              },
            ],
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "KdsLambdaConsumerLambdaFuncServiceRoleCF9C7104": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "KdsLambdaConsumerLambdaFuncServiceRoleDefaultPolicy948474E5": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "xray:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "cloudwatch:PutMetricStream",
                "cloudwatch:PutMetricData",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KdsLambdaConsumerKinesisDeadLetterQueue4D912974",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KdsLambdaConsumerTableACA57DBE",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KdsDataStream7B329BF0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "KdsLambdaConsumerLambdaFuncServiceRoleDefaultPolicy948474E5",
        "Roles": [
          {
            "Ref": "KdsLambdaConsumerLambdaFuncServiceRoleCF9C7104",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "KdsLambdaConsumerLambdaLogGroup4A5C0225": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "KdsLambdaConsumerLambdaFunc571FC7AA",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "KdsLambdaConsumerTableACA57DBE": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "recordId",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "recordId",
            "KeyType": "HASH",
          },
        ],
        "Replicas": [
          {
            "ContributorInsightsSpecification": {
              "Enabled": true,
            },
            "PointInTimeRecoverySpecification": {
              "PointInTimeRecoveryEnabled": false,
            },
            "Region": "ap-northeast-1",
            "TableClass": "STANDARD",
            "Tags": [
              {
                "Key": "Name",
                "Value": "prod-data-str-sample-apigw-kds-lambda-stack-lambda-consumer-deduplication-table",
              },
            ],
          },
        ],
        "SSESpecification": {
          "SSEEnabled": false,
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_IMAGE",
        },
        "TimeToLiveSpecification": {
          "AttributeName": "expired",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::GlobalTable",
      "UpdateReplacePolicy": "Delete",
    },
    "KdsLambdaConsumerdlqMessagesSentAlarm140B9E7D": {
      "Properties": {
        "AlarmName": "sqs-dlq-messages-sent-alarm-prod-data-str-sample-apigw-kds-lambda-stack",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": [
          {
            "Name": "QueueName",
            "Value": {
              "Fn::GetAtt": [
                "KdsLambdaConsumerKinesisDeadLetterQueue4D912974",
                "QueueName",
              ],
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "NumberOfMessagesSent",
        "Namespace": "AWS/SQS",
        "Period": 60,
        "Statistic": "Sum",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "KdsLambdaConsumerlambdaErrorsAlarm6629D4EF": {
      "Properties": {
        "AlarmName": "lambda-errors-alarm-prod-data-str-sample-apigw-kds-lambda-stack",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "KdsLambdaConsumerLambdaFunc571FC7AA",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 60,
        "Statistic": "Sum",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "KdsScaleOutLambda1CustomLayer6BC07A9F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "CompatibleArchitectures": [
          "x86_64",
          "arm64",
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
      },
      "Type": "AWS::Lambda::LayerVersion",
      "UpdateReplacePolicy": "Delete",
    },
    "KdsScaleOutLambda1LambdaFuncAlarmPermissionAB374451": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "KdsScaleOutLambda1LambdaFuncB992ECA1",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId",
        },
        "SourceArn": {
          "Fn::GetAtt": [
            "KdsDataStreamwriteProvisionedAlarmD89876F3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "KdsScaleOutLambda1LambdaFuncB992ECA1": {
      "DependsOn": [
        "KdsScaleOutLambda1LambdaFuncServiceRoleDefaultPolicy4BF8F6B3",
        "KdsScaleOutLambda1LambdaFuncServiceRoleE1B21DF0",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "DATA_STREAM_NAME": {
              "Ref": "KdsDataStream7B329BF0",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "KdsScaleOutLambda1CustomLayer6BC07A9F",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "SystemLogLevel": "WARN",
        },
        "Role": {
          "Fn::GetAtt": [
            "KdsScaleOutLambda1LambdaFuncServiceRoleE1B21DF0",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
        "Timeout": 180,
      },
      "Type": "AWS::Lambda::Function",
    },
    "KdsScaleOutLambda1LambdaFuncServiceRoleDefaultPolicy4BF8F6B3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:UpdateShardCount",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KdsDataStream7B329BF0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "KdsScaleOutLambda1LambdaFuncServiceRoleDefaultPolicy4BF8F6B3",
        "Roles": [
          {
            "Ref": "KdsScaleOutLambda1LambdaFuncServiceRoleE1B21DF0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "KdsScaleOutLambda1LambdaFuncServiceRoleE1B21DF0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "KdsScaleOutLambda1LambdaLogGroup05FE4D4C": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "KdsScaleOutLambda1LambdaFuncB992ECA1",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "KdsScaleOutLambda2CustomLayer55D28AD6": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "CompatibleArchitectures": [
          "x86_64",
          "arm64",
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
      },
      "Type": "AWS::Lambda::LayerVersion",
      "UpdateReplacePolicy": "Delete",
    },
    "KdsScaleOutLambda2LambdaFuncAlarmPermissionCC68733B": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "KdsScaleOutLambda2LambdaFuncC6EB0D2A",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId",
        },
        "SourceArn": {
          "Fn::GetAtt": [
            "KdsDataStreamreadProvisionedAlarm3EE73403",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "KdsScaleOutLambda2LambdaFuncC6EB0D2A": {
      "DependsOn": [
        "KdsScaleOutLambda2LambdaFuncServiceRoleDefaultPolicy2A46B899",
        "KdsScaleOutLambda2LambdaFuncServiceRoleA3484CD6",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "DATA_STREAM_NAME": {
              "Ref": "KdsDataStream7B329BF0",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "KdsScaleOutLambda2CustomLayer55D28AD6",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "SystemLogLevel": "WARN",
        },
        "Role": {
          "Fn::GetAtt": [
            "KdsScaleOutLambda2LambdaFuncServiceRoleA3484CD6",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
        "Timeout": 180,
      },
      "Type": "AWS::Lambda::Function",
    },
    "KdsScaleOutLambda2LambdaFuncServiceRoleA3484CD6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "KdsScaleOutLambda2LambdaFuncServiceRoleDefaultPolicy2A46B899": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:UpdateShardCount",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KdsDataStream7B329BF0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "KdsScaleOutLambda2LambdaFuncServiceRoleDefaultPolicy2A46B899",
        "Roles": [
          {
            "Ref": "KdsScaleOutLambda2LambdaFuncServiceRoleA3484CD6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "KdsScaleOutLambda2LambdaLogGroup894B39AA": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "KdsScaleOutLambda2LambdaFuncC6EB0D2A",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
      "DependsOn": [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-apigw-kds-lambda-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": [
          {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`baseStack 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AlarmNotificationHandler3668E638": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AlarmNotificationHandlerRoleDefaultPolicyFFB2F848",
        "AlarmNotificationHandlerRoleA1B91015",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"snsPublishTask","States":{"snsPublishTask":{"End":true,"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:sns:publish","Parameters":{"TopicArn":"",
              {
                "Ref": "AlarmNotificationTopic58BFACC9",
              },
              "","Message.$":"$.message","Subject.$":"$.subject"}}}}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "AlarmNotificationHandlerRoleA1B91015",
            "Arn",
          ],
        },
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-stack",
          },
        ],
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "AlarmNotificationHandlerEventsRole13840AD0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AlarmNotificationHandlerEventsRoleDefaultPolicyFAA93D6E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "AlarmNotificationHandler3668E638",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlarmNotificationHandlerEventsRoleDefaultPolicyFAA93D6E",
        "Roles": [
          {
            "Ref": "AlarmNotificationHandlerEventsRole13840AD0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlarmNotificationHandlerRoleA1B91015": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "states.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AlarmNotificationHandlerRoleDefaultPolicyFFB2F848": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "AlarmNotificationTopic58BFACC9",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlarmNotificationHandlerRoleDefaultPolicyFFB2F848",
        "Roles": [
          {
            "Ref": "AlarmNotificationHandlerRoleA1B91015",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AlarmNotificationHandlerRule4D0A5C08": {
      "Properties": {
        "EventPattern": {
          "detail": {
            "alarmName": [
              {
                "suffix": "info",
              },
            ],
            "state": {
              "value": [
                "ALARM",
              ],
            },
          },
          "detail-type": [
            "CloudWatch Alarm State Change",
          ],
          "source": [
            "aws.cloudwatch",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "AlarmNotificationHandler3668E638",
            },
            "Id": "Target0",
            "InputTransformer": {
              "InputPathsMap": {
                "detail": "$.detail",
                "detail-alarmName": "$.detail.alarmName",
              },
              "InputTemplate": "{"subject":"【CDK Streamingサンプルアラーム通知】 <detail-alarmName>","message":<detail>}",
            },
            "RoleArn": {
              "Fn::GetAtt": [
                "AlarmNotificationHandlerEventsRole13840AD0",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AlarmNotificationTopic58BFACC9": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-stack",
          },
        ],
      },
      "Type": "AWS::SNS::Topic",
      "UpdateReplacePolicy": "Delete",
    },
    "ApiGWAccountRoleBB7B8DFB": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CfnAccount": {
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ApiGWAccountRoleBB7B8DFB",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "TestResourceDeploymentAwsCliLayer97CF1353",
          },
        ],
        "LoggingConfig": {
          "LogGroup": {
            "Ref": "TestResourceDeploymentLogGroup3D44C320",
          },
        },
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-stack",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TestResourceBucket13D16153",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TestResourceBucket13D16153",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "TestResourceBucket13D16153",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestDataInjectionArtifactBucketCA0A3E45": {
      "DeletionPolicy": "RetainExceptOnCreate",
      "Properties": {
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-stack",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "TestDataInjectionArtifactBucketPolicyF6EAEDA1": {
      "Properties": {
        "Bucket": {
          "Ref": "TestDataInjectionArtifactBucketCA0A3E45",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TestDataInjectionArtifactBucketCA0A3E45",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TestDataInjectionArtifactBucketCA0A3E45",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "TestDataInjectionLogGroup1FAD4AB6": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 7,
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-stack",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "TestDataInjectionProject5B02AD05": {
      "Properties": {
        "Artifacts": {
          "Location": {
            "Ref": "TestDataInjectionArtifactBucketCA0A3E45",
          },
          "NamespaceType": "BUILD_ID",
          "OverrideArtifactName": true,
          "Packaging": "ZIP",
          "Type": "S3",
        },
        "Cache": {
          "Modes": [
            "LOCAL_DOCKER_LAYER_CACHE",
          ],
          "Type": "LOCAL",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": {
            "Fn::Sub": "\${AWS::AccountId}.dkr.ecr.ap-northeast-1.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-\${AWS::AccountId}-ap-northeast-1:c788c3602ea579b1e1f2c0292b5d5983832f98e3cf518d93f264b3975c6b0b32",
          },
          "ImagePullCredentialsType": "SERVICE_ROLE",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "LogsConfig": {
          "CloudWatchLogs": {
            "GroupName": {
              "Ref": "TestDataInjectionLogGroup1FAD4AB6",
            },
            "Status": "ENABLED",
          },
        },
        "Name": "prod-data-str-base-stack-project",
        "ServiceRole": {
          "Fn::GetAtt": [
            "TestDataInjectionProjectRole4E3E8CA8",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": 0.2,
  "env": {
    "shell": "bash",
    "variables": {
      "SCRIPT_NAME": "apiGwPutRecords",
      "STACK_NAME": "dev-data-str-sample-apigw-kds-lambda-stack"
    }
  },
  "phases": {
    "install": {
      "command": [
        "ls -al",
        "npm ci",
        "node --version",
        "jq --version"
      ]
    },
    "pre_build": {
      "commands": [
        "ls -al",
        "echo \\"$SCRIPT_NAME\\"",
        "echo \\"$STACK_NAME\\""
      ]
    },
    "build": {
      "commands": [
        "npx ts-node \\"$SCRIPT_NAME.ts\\""
      ]
    },
    "post_build": {
      "commands": [
        "rm -rf node_modules",
        "echo succeeded > result.txt",
        "cd ./sh",
        "bash ./checkScriptLog.sh \\"../$SCRIPT_NAME.log\\" | tee checkScriptLog.sh.log",
        "cat result.txt",
        "bash ./checkCwAlarms.sh \\"StackName\\" \\"$STACK_NAME\\" | tee checkCwAlarms.sh.log",
        "cat result.txt",
        "if [ $(cat result.txt) == \\"failed\\" ]; then exit 1; fi"
      ]
    }
  },
  "artifacts": {
    "files": [
      "**/*"
    ]
  }
}",
          "Type": "NO_SOURCE",
        },
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-stack",
          },
        ],
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "TestDataInjectionProjectRole4E3E8CA8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestDataInjectionProjectRoleDefaultPolicy249F1ED7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TestDataInjectionArtifactBucketCA0A3E45",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TestDataInjectionArtifactBucketCA0A3E45",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:ap-northeast-1:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/",
                    {
                      "Fn::Sub": "cdk-hnb659fds-container-assets-\${AWS::AccountId}-ap-northeast-1",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "TestDataInjectionLogGroup1FAD4AB6",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:ap-northeast-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "TestDataInjectionProject5B02AD05",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:ap-northeast-1:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "TestDataInjectionProject5B02AD05",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:ap-northeast-1:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "TestDataInjectionProject5B02AD05",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
                "logs:DescribeLogGroups",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "s3:GetEncryptionConfiguration",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TestDataInjectionArtifactBucketCA0A3E45",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TestDataInjectionArtifactBucketCA0A3E45",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:ap-northeast-1:",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter*",
                  ],
                ],
              },
            },
            {
              "Action": "tag:GetResources",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "cloudwatch:DescribeAlarms",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestDataInjectionProjectRoleDefaultPolicy249F1ED7",
        "Roles": [
          {
            "Ref": "TestDataInjectionProjectRole4E3E8CA8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestResourceBucket13D16153": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "cdk-samples-test-resource-bucket-",
              {
                "Ref": "AWS::AccountId",
              },
            ],
          ],
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "aws-cdk:cr-owned:3c1e193c",
            "Value": "true",
          },
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-stack",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "TestResourceBucketAutoDeleteObjectsCustomResourceC126B230": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "TestResourceBucketPolicy65347F05",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "TestResourceBucket13D16153",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "TestResourceBucketPolicy65347F05": {
      "Properties": {
        "Bucket": {
          "Ref": "TestResourceBucket13D16153",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TestResourceBucket13D16153",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TestResourceBucket13D16153",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "TestResourceBucket13D16153",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "TestResourceBucket13D16153",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "TestResourceDeploymentAwsCliLayer97CF1353": {
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "TestResourceDeploymentCustomResourceBE3730EF": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "DestinationBucketName": {
          "Ref": "TestResourceBucket13D16153",
        },
        "Prune": true,
        "RetainOnDelete": false,
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": [
          {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
        ],
        "SourceObjectKeys": [
          "HASH-REPLACED.zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "TestResourceDeploymentLogGroup3D44C320": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-stack",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "apiGwPutRecordLog1FED03EE": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": "/test/script/apiGwPutRecord",
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-stack",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "apiGwPutRecordsLog349C966D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": "/test/script/apiGwPutRecords",
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-stack",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "sdkPutRecordsLog47997B07": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": "/test/script/sdkPutRecords",
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-stack",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`baseVpcStack 1`] = `
{
  "Outputs": {
    "VpcId": {
      "Export": {
        "Name": "vpcId",
      },
      "Value": {
        "Ref": "Vpc8378EB38",
      },
    },
    "privateSubnetId": {
      "Export": {
        "Name": "privateSubnetId",
      },
      "Value": {
        "Ref": "VpcprivatewithegressSubnet1Subnet6DC728F6",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "Vpc8378EB38": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "data-str-test-vpc",
          },
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-vpc-stack",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "data-str-test-vpc",
          },
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-vpc-stack",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcVPCGWBF912B6E": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VpcprivatewithegressSubnet1DefaultRouteAF1C57EA": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "VpcpublicSubnet1NATGatewayA036E8A6",
        },
        "RouteTableId": {
          "Ref": "VpcprivatewithegressSubnet1RouteTable485DDF9D",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcprivatewithegressSubnet1RouteTable485DDF9D": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "prod/data-str-base-vpc-stack/Vpc/private-with-egressSubnet1",
          },
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-vpc-stack",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcprivatewithegressSubnet1RouteTableAssociationF3EB34E8": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcprivatewithegressSubnet1RouteTable485DDF9D",
        },
        "SubnetId": {
          "Ref": "VpcprivatewithegressSubnet1Subnet6DC728F6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcprivatewithegressSubnet1Subnet6DC728F6": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "private-with-egress",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "Name",
            "Value": "prod/data-str-base-vpc-stack/Vpc/private-with-egressSubnet1",
          },
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-vpc-stack",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcpublicSubnet1DefaultRouteB88F9E93": {
      "DependsOn": [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": {
          "Ref": "VpcpublicSubnet1RouteTable15C15F8E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcpublicSubnet1EIP411541E6": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "prod/data-str-base-vpc-stack/Vpc/publicSubnet1",
          },
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-vpc-stack",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcpublicSubnet1NATGatewayA036E8A6": {
      "DependsOn": [
        "VpcpublicSubnet1DefaultRouteB88F9E93",
        "VpcpublicSubnet1RouteTableAssociation4E83B6E4",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "VpcpublicSubnet1EIP411541E6",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "VpcpublicSubnet1Subnet2BB74ED7",
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "prod/data-str-base-vpc-stack/Vpc/publicSubnet1",
          },
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-vpc-stack",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcpublicSubnet1RouteTable15C15F8E": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "prod/data-str-base-vpc-stack/Vpc/publicSubnet1",
          },
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-vpc-stack",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcpublicSubnet1RouteTableAssociation4E83B6E4": {
      "Properties": {
        "RouteTableId": {
          "Ref": "VpcpublicSubnet1RouteTable15C15F8E",
        },
        "SubnetId": {
          "Ref": "VpcpublicSubnet1Subnet2BB74ED7",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcpublicSubnet1Subnet2BB74ED7": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "Name",
            "Value": "prod/data-str-base-vpc-stack/Vpc/publicSubnet1",
          },
          {
            "Key": "StackName",
            "Value": "prod-data-str-base-vpc-stack",
          },
        ],
        "VpcId": {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`deliveryS3Stack 1`] = `
{
  "Conditions": {
    "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region",
            },
            "cn-north-1",
          ],
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region",
            },
            "cn-northwest-1",
          ],
        },
      ],
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "DestinationBucket4BECDB47",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DestinationBucket4BECDB47": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DestinationBucketAutoDeleteObjectsCustomResource8ECA4428": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "DestinationBucketPolicyFCD81088",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "DestinationBucket4BECDB47",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DestinationBucketPolicyFCD81088": {
      "Properties": {
        "Bucket": {
          "Ref": "DestinationBucket4BECDB47",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DestinationBucket4BECDB47",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DestinationBucket4BECDB47",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DestinationBucket4BECDB47",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DestinationBucket4BECDB47",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FirehoseBkBucketAutoDeleteObjectsCustomResource34499E1B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "FirehoseBkBucketPolicy5F3C33F8",
      ],
      "Properties": {
        "BucketName": {
          "Ref": "FirehoseBkBucketD182A5B2",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "FirehoseBkBucketD182A5B2": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "FirehoseBkBucketPolicy5F3C33F8": {
      "Properties": {
        "Bucket": {
          "Ref": "FirehoseBkBucketD182A5B2",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FirehoseBkBucketD182A5B2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FirehoseBkBucketD182A5B2",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:PutBucketPolicy",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FirehoseBkBucketD182A5B2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FirehoseBkBucketD182A5B2",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "FirehoseWithLambdaCustomLayer9FB598A7": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "CompatibleArchitectures": [
          "x86_64",
          "arm64",
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
      },
      "Type": "AWS::Lambda::LayerVersion",
      "UpdateReplacePolicy": "Delete",
    },
    "FirehoseWithLambdaLambdaFunc46ED7116": {
      "DependsOn": [
        "FirehoseWithLambdaLambdaFuncServiceRoleDefaultPolicy7D432408",
        "FirehoseWithLambdaLambdaFuncServiceRoleA278785B",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
        "FunctionName": "prod-data-str-sample-delivery-s3-stack-func",
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "FirehoseWithLambdaCustomLayer9FB598A7",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "SystemLogLevel": "WARN",
        },
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "FirehoseWithLambdaLambdaFuncServiceRoleA278785B",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
        "Timeout": 180,
      },
      "Type": "AWS::Lambda::Function",
    },
    "FirehoseWithLambdaLambdaFuncServiceRoleA278785B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FirehoseWithLambdaLambdaFuncServiceRoleDefaultPolicy7D432408": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "xray:*",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "cloudwatch:PutMetricStream",
                "cloudwatch:PutMetricData",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FirehoseWithLambdaLambdaFuncServiceRoleDefaultPolicy7D432408",
        "Roles": [
          {
            "Ref": "FirehoseWithLambdaLambdaFuncServiceRoleA278785B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FirehoseWithLambdaLogGroupC2F816BB": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "FirehoseWithLambdaLambdaFunc46ED7116",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "FirehoseWithLambdaS3BackupErrorLogGroup1C7957D0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "FirehoseWithLambdaS3BackupErrorLogGroupS3BackupC91C6E8B": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": {
          "Ref": "FirehoseWithLambdaS3BackupErrorLogGroup1C7957D0",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "FirehoseWithLambdaS3DestinationErrorLogGroup371AF266": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "FirehoseWithLambdaS3DestinationErrorLogGroupS3Destination4338BCDC": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "LogGroupName": {
          "Ref": "FirehoseWithLambdaS3DestinationErrorLogGroup371AF266",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "FirehoseWithLambdaSampleDeliveryStream2C0299A1": {
      "DependsOn": [
        "FirehoseWithLambdaSampleDeliveryStreamS3DestinationRoleDefaultPolicyEA31052E",
        "FirehoseWithLambdaSampleDeliveryStreamServiceRoleDefaultPolicy3ECB03ED",
      ],
      "Properties": {
        "DeliveryStreamType": "KinesisStreamAsSource",
        "ExtendedS3DestinationConfiguration": {
          "BucketARN": {
            "Fn::GetAtt": [
              "DestinationBucket4BECDB47",
              "Arn",
            ],
          },
          "BufferingHints": {
            "IntervalInSeconds": 60,
            "SizeInMBs": 64,
          },
          "CloudWatchLoggingOptions": {
            "Enabled": true,
            "LogGroupName": {
              "Ref": "FirehoseWithLambdaS3DestinationErrorLogGroup371AF266",
            },
            "LogStreamName": {
              "Ref": "FirehoseWithLambdaS3DestinationErrorLogGroupS3Destination4338BCDC",
            },
          },
          "DynamicPartitioningConfiguration": {
            "Enabled": true,
          },
          "ErrorOutputPrefix": "error/!{firehose:error-output-type}/!{timestamp:yyyy/MM/dd/HH}/",
          "Prefix": "data/!{partitionKeyFromLambda:dataType}/!{timestamp:yyyy/MM/dd/HH}/",
          "ProcessingConfiguration": {
            "Enabled": true,
            "Processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "RoleArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "FirehoseWithLambdaSampleDeliveryStreamS3DestinationRole7FA49CF9",
                        "Arn",
                      ],
                    },
                  },
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "FirehoseWithLambdaLambdaFunc46ED7116",
                        "Arn",
                      ],
                    },
                  },
                  {
                    "ParameterName": "BufferIntervalInSeconds",
                    "ParameterValue": "10",
                  },
                  {
                    "ParameterName": "BufferSizeInMBs",
                    "ParameterValue": "3",
                  },
                ],
                "Type": "Lambda",
              },
            ],
            "processors": [
              {
                "Parameters": [
                  {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": {
                      "Fn::GetAtt": [
                        "FirehoseWithLambdaLambdaFunc46ED7116",
                        "Arn",
                      ],
                    },
                  },
                ],
                "Type": "Lambda",
              },
              {
                "Parameters": [
                  {
                    "ParameterName": "Delimiter",
                    "ParameterValue": "\\n",
                  },
                ],
                "Type": "AppendDelimiterToRecord",
              },
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "FirehoseWithLambdaSampleDeliveryStreamS3DestinationRole7FA49CF9",
              "Arn",
            ],
          },
          "S3BackupConfiguration": {
            "BucketARN": {
              "Fn::GetAtt": [
                "FirehoseBkBucketD182A5B2",
                "Arn",
              ],
            },
            "BufferingHints": {
              "IntervalInSeconds": 60,
              "SizeInMBs": 5,
            },
            "CloudWatchLoggingOptions": {
              "Enabled": true,
              "LogGroupName": {
                "Ref": "FirehoseWithLambdaS3BackupErrorLogGroup1C7957D0",
              },
              "LogStreamName": {
                "Ref": "FirehoseWithLambdaS3BackupErrorLogGroupS3BackupC91C6E8B",
              },
            },
            "RoleARN": {
              "Fn::GetAtt": [
                "FirehoseWithLambdaSampleDeliveryStreamS3DestinationRole7FA49CF9",
                "Arn",
              ],
            },
          },
          "S3BackupMode": "Enabled",
        },
        "KinesisStreamSourceConfiguration": {
          "KinesisStreamARN": {
            "Fn::GetAtt": [
              "KdsDataStream7B329BF0",
              "Arn",
            ],
          },
          "RoleARN": {
            "Fn::GetAtt": [
              "FirehoseWithLambdaSampleDeliveryStreamServiceRoleC1388C97",
              "Arn",
            ],
          },
        },
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "FirehoseWithLambdaSampleDeliveryStreamS3DestinationRole7FA49CF9": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FirehoseWithLambdaSampleDeliveryStreamS3DestinationRoleDefaultPolicyEA31052E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "DestinationBucket4BECDB47",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "DestinationBucket4BECDB47",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FirehoseWithLambdaS3DestinationErrorLogGroup371AF266",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FirehoseBkBucketD182A5B2",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FirehoseBkBucketD182A5B2",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "FirehoseWithLambdaS3BackupErrorLogGroup1C7957D0",
                  "Arn",
                ],
              },
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "FirehoseWithLambdaLambdaFunc46ED7116",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "FirehoseWithLambdaLambdaFunc46ED7116",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FirehoseWithLambdaSampleDeliveryStreamS3DestinationRoleDefaultPolicyEA31052E",
        "Roles": [
          {
            "Ref": "FirehoseWithLambdaSampleDeliveryStreamS3DestinationRole7FA49CF9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FirehoseWithLambdaSampleDeliveryStreamServiceRoleC1388C97": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "FirehoseWithLambdaSampleDeliveryStreamServiceRoleDefaultPolicy3ECB03ED": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "kinesis:DescribeStreamConsumer",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KdsDataStream7B329BF0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "FirehoseWithLambdaSampleDeliveryStreamServiceRoleDefaultPolicy3ECB03ED",
        "Roles": [
          {
            "Ref": "FirehoseWithLambdaSampleDeliveryStreamServiceRoleC1388C97",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "FirehoseWithLambdadataFreshnessAlarmAA68B709": {
      "Properties": {
        "AlarmName": "firehose-s3-data-freshness-alarm-prod-data-str-sample-delivery-s3-stack",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": [
          {
            "Name": "DeliveryStreamName",
            "Value": {
              "Ref": "FirehoseWithLambdaSampleDeliveryStream2C0299A1",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "DeliveryToS3.DataFreshness",
        "Namespace": "AWS/Firehose",
        "Period": 300,
        "Statistic": "Average",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "FirehoseWithLambdalambdaErrorsAlarm91F54D75": {
      "Properties": {
        "AlarmName": "firehose-lambda-errors-alarm-prod-data-str-sample-delivery-s3-stack",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 3,
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "FirehoseWithLambdaLambdaFunc46ED7116",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 60,
        "Statistic": "Sum",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "FirehoseWithLambdapartitionCountExceededAlarmC19CA446": {
      "Properties": {
        "AlarmName": "firehose-partition-count-alarm-prod-data-str-sample-delivery-s3-stack",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 1,
        "Dimensions": [
          {
            "Name": "DeliveryStreamName",
            "Value": {
              "Ref": "FirehoseWithLambdaSampleDeliveryStream2C0299A1",
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "PartitionCountExceeded",
        "Namespace": "AWS/Firehose",
        "Period": 300,
        "Statistic": "Average",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "KdsCWDashboradDashboard45FE56EE": {
      "Properties": {
        "DashboardBody": {
          "Fn::Join": [
            "",
            [
              "{"start":"-PT1H","widgets":[{"type":"text","width":24,"height":2,"x":0,"y":0,"properties":{"markdown":"# CloudWatch Alarm"}},{"type":"alarm","width":24,"height":3,"x":0,"y":2,"properties":{"title":"Alarm Status","alarms":["",
              {
                "Fn::GetAtt": [
                  "KdsDataStreamwriteProvisionedAlarmD89876F3",
                  "Arn",
                ],
              },
              "","",
              {
                "Fn::GetAtt": [
                  "KdsDataStreamreadProvisionedAlarm3EE73403",
                  "Arn",
                ],
              },
              "","",
              {
                "Fn::GetAtt": [
                  "KdsDataStreamiteratorAgeAlarm04D03A9D",
                  "Arn",
                ],
              },
              "","",
              {
                "Fn::GetAtt": [
                  "FirehoseWithLambdapartitionCountExceededAlarmC19CA446",
                  "Arn",
                ],
              },
              "","",
              {
                "Fn::GetAtt": [
                  "FirehoseWithLambdadataFreshnessAlarmAA68B709",
                  "Arn",
                ],
              },
              "","",
              {
                "Fn::GetAtt": [
                  "FirehoseWithLambdalambdaErrorsAlarm91F54D75",
                  "Arn",
                ],
              },
              ""]}},{"type":"text","width":24,"height":15,"x":0,"y":5,"properties":{"markdown":"\\n| サービス       | アラーム名             | 検知される状況                                             | 対応                                                                    |\\n|------------|-------------------|-----------------------------------------------------|-----------------------------------------------------------------------|\\n| KDS        | write-provisioned | Producerの送信量がシャード規定を上回る                             | オンデマンドモードの場合: 自動でスケールアウトのため対応不要<br/>プロビジョンドモードの場合: 自動スケールアウトLambdaが起動 |\\n| KDS        | read-provisioned  | Consumerの読み取り量がシャード規定を上回る<br/>主に複数Consumer構成のケースで発生 | write-provisionedと同じ                                                  |\\n| KDS        | iterator-age      | Producerの送信量 > Consumerの処理量で処理遅延発生                  | Consumerの処理能力を上げるなど<br/>対応手順のリンクを貼る                                   |\\n| APIGW      | client-error      | APIGWで4××エラーが一定数を超える<br/>不正なアクセスによる403エラーなど         | 対応手順のリンクを貼る                                                           |\\n| APIGW      | server-error      | APIGWで5××エラーが一定数を超える<br/>APIGWとKDSの統合エラーやネットワーク遮断など | 基本的にこちらでの対応は不可<br/>未処理レコードが発生していないか確認するなど                             |\\n| Lambda     | errors            | Lambda関数でのエラーが一定数を超える<br/>業務処理の失敗、メモリ不足など           | 対応手順のリンクを貼る                                                           |\\n| Lambda-SQS | dlq-messages-sent | Lambdaでの最大リトライを超える処理失敗により、<br/>未処理レコード発生            | Messageを確認して手動で処理を再実行するなど<br/>対応手順のリンクを貼る                             |\\n| Firehose   | partition-count   | 動的パーティショニング使用時にパーティション数が上限値を超える                     | パーティション作成の実装見直しなど                                                     |\\n| Firehose   | s3-data-freshness | S3配信時に一定以上の配信処理遅延が発生                                | 対応手順のリンクを貼る                                                           |\\n| Firehose   | lambda-errors     | Firehose連携のLambda関数で一定以上のエラー発生                      | 関数の実装見直しなど                                                            |\\n"}},{"type":"text","width":24,"height":2,"x":0,"y":20,"properties":{"markdown":"# Kinesis Metrics"}},{"type":"metric","width":12,"height":8,"x":0,"y":22,"properties":{"view":"timeSeries","title":"書き込み制限エラー数(Sum)と分あたり送信レコードByte(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Kinesis","PutRecords.ThrottledRecords","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"period":60,"stat":"Sum"}],[{"label":"incommingBytes","expression":"e1/60","yAxis":"right"}],["AWS/Kinesis","IncomingBytes","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"stat":"Sum","visible":false,"id":"e1"}]],"yAxis":{"left":{"min":0},"right":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":12,"y":30,"properties":{"view":"timeSeries","title":"読み込み制限エラー数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Kinesis","PutRecords.ThrottledRecords","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              ""]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":0,"y":38,"properties":{"view":"timeSeries","title":"書き込み制限エラー数(Sum)と分あたり送信レコード数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Kinesis","PutRecords.ThrottledRecords","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"period":60,"stat":"Sum"}],[{"label":"incommingRecords","expression":"e1/60","yAxis":"right"}],["AWS/Kinesis","IncomingRecords","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"stat":"Sum","visible":false,"id":"e1"}]],"yAxis":{"left":{"min":0},"right":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":12,"y":30,"properties":{"view":"timeSeries","title":"読み込み制限エラー数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Kinesis","PutRecords.ThrottledRecords","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              ""]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":0,"y":38,"properties":{"view":"timeSeries","title":"書き込み制限エラー数(Sum)と分あたり送信レコード数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Kinesis","PutRecords.ThrottledRecords","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"period":60,"stat":"Sum"}],[{"label":"incommingRecords","expression":"e1/60","yAxis":"right"}],["AWS/Kinesis","IncomingRecords","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"stat":"Sum","visible":false,"id":"e1"}]],"yAxis":{"left":{"min":0},"right":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":12,"y":38,"properties":{"view":"timeSeries","title":"データストリーム内での待機時間(Max, p99, Avg, Min)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Kinesis","GetRecords.IteratorAgeMilliseconds","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"stat":"Maximum"}],["AWS/Kinesis","GetRecords.IteratorAgeMilliseconds","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"stat":"p99"}],["AWS/Kinesis","GetRecords.IteratorAgeMilliseconds","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              ""],["AWS/Kinesis","GetRecords.IteratorAgeMilliseconds","StreamName","",
              {
                "Ref": "KdsDataStream7B329BF0",
              },
              "",{"stat":"Minimum"}]],"yAxis":{"left":{"min":0}},"period":60}},{"type":"text","width":24,"height":2,"x":0,"y":46,"properties":{"markdown":"# Lambda Metrics"}},{"type":"metric","width":12,"height":8,"x":0,"y":48,"properties":{"view":"timeSeries","title":"関数起動数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Lambda","Invocations","FunctionName","",
              {
                "Ref": "FirehoseWithLambdaLambdaFunc46ED7116",
              },
              "",{"stat":"Sum"}]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":12,"y":48,"properties":{"view":"timeSeries","title":"関数実行時間(Max, p99, Avg, Min)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Lambda","Duration","FunctionName","",
              {
                "Ref": "FirehoseWithLambdaLambdaFunc46ED7116",
              },
              "",{"stat":"Maximum"}],["AWS/Lambda","Duration","FunctionName","",
              {
                "Ref": "FirehoseWithLambdaLambdaFunc46ED7116",
              },
              "",{"stat":"p99"}],["AWS/Lambda","Duration","FunctionName","",
              {
                "Ref": "FirehoseWithLambdaLambdaFunc46ED7116",
              },
              ""],["AWS/Lambda","Duration","FunctionName","",
              {
                "Ref": "FirehoseWithLambdaLambdaFunc46ED7116",
              },
              "",{"stat":"Minimum"}]],"yAxis":{"left":{"min":0}},"period":60}},{"type":"metric","width":12,"height":8,"x":0,"y":56,"properties":{"view":"timeSeries","title":"関数同時実行数(Max)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Lambda","ConcurrentExecutions","FunctionName","",
              {
                "Ref": "FirehoseWithLambdaLambdaFunc46ED7116",
              },
              ""]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Maximum"}},{"type":"metric","width":12,"height":8,"x":12,"y":56,"properties":{"view":"timeSeries","title":"メモリ使用率(Max)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["LambdaInsights","memory_utilization","function_name","",
              {
                "Ref": "FirehoseWithLambdaLambdaFunc46ED7116",
              },
              "",{"stat":"Maximum"}]],"yAxis":{"left":{"min":0}},"period":60}},{"type":"metric","width":12,"height":8,"x":0,"y":64,"properties":{"view":"timeSeries","title":"スロットリング発生数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Lambda","Errors","FunctionName","",
              {
                "Ref": "FirehoseWithLambdaLambdaFunc46ED7116",
              },
              "",{"stat":"Sum"}]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":12,"y":64,"properties":{"view":"timeSeries","title":"エラー数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Lambda","Errors","FunctionName","",
              {
                "Ref": "FirehoseWithLambdaLambdaFunc46ED7116",
              },
              "",{"stat":"Sum"}]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":0,"y":72,"properties":{"view":"timeSeries","title":"バッチサイズ：関数あたりの処理レコード数(Max, Avg, Min)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["Custom/LambdaMetrics","LambdaBatchSize","functionName","",
              {
                "Ref": "FirehoseWithLambdaLambdaFunc46ED7116",
              },
              "",{"stat":"Maximum"}],["Custom/LambdaMetrics","LambdaBatchSize","functionName","",
              {
                "Ref": "FirehoseWithLambdaLambdaFunc46ED7116",
              },
              ""],["Custom/LambdaMetrics","LambdaBatchSize","functionName","",
              {
                "Ref": "FirehoseWithLambdaLambdaFunc46ED7116",
              },
              "",{"stat":"Minimum"}]],"yAxis":{"left":{"min":0},"right":{"min":0}}}},{"type":"text","width":24,"height":2,"x":0,"y":80,"properties":{"markdown":"# Data Firehose Metrics"}},{"type":"metric","width":12,"height":8,"x":0,"y":82,"properties":{"view":"timeSeries","title":"KDSからの読み込みレコード数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Firehose","DataReadFromKinesisStream.Records","DeliveryStreamName","",
              {
                "Ref": "FirehoseWithLambdaSampleDeliveryStream2C0299A1",
              },
              ""]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":12,"y":82,"properties":{"view":"timeSeries","title":"KDSからの読み込みバイト数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Firehose","DataReadFromKinesisStream.Bytes","DeliveryStreamName","",
              {
                "Ref": "FirehoseWithLambdaSampleDeliveryStream2C0299A1",
              },
              ""]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":0,"y":90,"properties":{"view":"timeSeries","title":"S3への配信レコード数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Firehose","DeliveryToS3.Records","DeliveryStreamName","",
              {
                "Ref": "FirehoseWithLambdaSampleDeliveryStream2C0299A1",
              },
              ""]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":12,"y":90,"properties":{"view":"timeSeries","title":"正常に終了したS3 putコマンド合計(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Firehose","DeliveryToS3.Success","DeliveryStreamName","",
              {
                "Ref": "FirehoseWithLambdaSampleDeliveryStream2C0299A1",
              },
              ""]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":0,"y":98,"properties":{"view":"timeSeries","title":"Firehose内の最も古いレコードの経過時間(Max, p99, Avg, Min)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Firehose","DeliveryToS3.DataFreshness","DeliveryStreamName","",
              {
                "Ref": "FirehoseWithLambdaSampleDeliveryStream2C0299A1",
              },
              "",{"stat":"Maximum"}],["AWS/Firehose","DeliveryToS3.DataFreshness","DeliveryStreamName","",
              {
                "Ref": "FirehoseWithLambdaSampleDeliveryStream2C0299A1",
              },
              "",{"stat":"p99"}],["AWS/Firehose","DeliveryToS3.DataFreshness","DeliveryStreamName","",
              {
                "Ref": "FirehoseWithLambdaSampleDeliveryStream2C0299A1",
              },
              ""],["AWS/Firehose","DeliveryToS3.DataFreshness","DeliveryStreamName","",
              {
                "Ref": "FirehoseWithLambdaSampleDeliveryStream2C0299A1",
              },
              "",{"stat":"Minimum"}]],"yAxis":{"left":{"min":0}},"period":60}},{"type":"text","width":24,"height":1,"x":0,"y":106,"properties":{"markdown":"## 動的パーティショニング"}},{"type":"metric","width":12,"height":8,"x":0,"y":107,"properties":{"view":"timeSeries","title":"Lambdaによる加工処理が正常に完了したレコード数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Firehose","SucceedProcessing.Records","DeliveryStreamName","",
              {
                "Ref": "FirehoseWithLambdaSampleDeliveryStream2C0299A1",
              },
              ""]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":12,"y":107,"properties":{"view":"timeSeries","title":"正常に完了したLambdaによる加工処理数(Sum)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Firehose","ExecuteProcessing.Success","DeliveryStreamName","",
              {
                "Ref": "FirehoseWithLambdaSampleDeliveryStream2C0299A1",
              },
              ""]],"yAxis":{"left":{"min":0}},"period":60,"stat":"Sum"}},{"type":"metric","width":12,"height":8,"x":0,"y":115,"properties":{"view":"timeSeries","title":"動的パーティショニングによるパーティション数と上限超過数(Max)","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/Firehose","PartitionCount","DeliveryStreamName","",
              {
                "Ref": "FirehoseWithLambdaSampleDeliveryStream2C0299A1",
              },
              ""],["AWS/Firehose","PartitionCountExceeded","DeliveryStreamName","",
              {
                "Ref": "FirehoseWithLambdaSampleDeliveryStream2C0299A1",
              },
              "",{"yAxis":"right"}]],"yAxis":{"left":{"min":0},"right":{"min":0}},"period":60,"stat":"Maximum"}}]}",
            ],
          ],
        },
        "DashboardName": "prod-data-str-sample-delivery-s3-stack-dashboard-ap-northeast-1",
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "KdsDataStream7B329BF0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "RetentionPeriodHours": 24,
        "ShardCount": 1,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue",
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis",
            },
          ],
        },
        "StreamModeDetails": {
          "StreamMode": "PROVISIONED",
        },
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
      },
      "Type": "AWS::Kinesis::Stream",
      "UpdateReplacePolicy": "Delete",
    },
    "KdsDataStreamiteratorAgeAlarm04D03A9D": {
      "Properties": {
        "AlarmName": "kds-iterator-age-alarm-prod-data-str-sample-delivery-s3-stack",
        "ComparisonOperator": "GreaterThanThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": [
          {
            "Name": "StreamName",
            "Value": {
              "Ref": "KdsDataStream7B329BF0",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "GetRecords.IteratorAgeMilliseconds",
        "Namespace": "AWS/Kinesis",
        "Period": 60,
        "Statistic": "Sum",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
        "Threshold": 0,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "KdsDataStreamparameter9E23EE0A": {
      "Properties": {
        "Name": "/prod-data-str-sample-delivery-s3-stack/stream/name",
        "Tags": {
          "StackName": "prod-data-str-sample-delivery-s3-stack",
        },
        "Type": "String",
        "Value": {
          "Ref": "KdsDataStream7B329BF0",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "KdsDataStreamreadProvisionedAlarm3EE73403": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::GetAtt": [
              "KdsScaleOutLambda2LambdaFuncC6EB0D2A",
              "Arn",
            ],
          },
        ],
        "AlarmName": "kds-read-provisioned-alarm-prod-data-str-sample-delivery-s3-stack",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": [
          {
            "Name": "StreamName",
            "Value": {
              "Ref": "KdsDataStream7B329BF0",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "ReadProvisionedThroughputExceeded",
        "Namespace": "AWS/Kinesis",
        "Period": 60,
        "Statistic": "Sum",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
        "Threshold": 500,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "KdsDataStreamwriteProvisionedAlarmD89876F3": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::GetAtt": [
              "KdsScaleOutLambda1LambdaFuncB992ECA1",
              "Arn",
            ],
          },
        ],
        "AlarmName": "kds-write-provisioned-alarm-prod-data-str-sample-delivery-s3-stack",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "DatapointsToAlarm": 5,
        "Dimensions": [
          {
            "Name": "StreamName",
            "Value": {
              "Ref": "KdsDataStream7B329BF0",
            },
          },
        ],
        "EvaluationPeriods": 5,
        "MetricName": "WriteProvisionedThroughputExceeded",
        "Namespace": "AWS/Kinesis",
        "Period": 60,
        "Statistic": "Sum",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
        "Threshold": 500,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "KdsScaleOutLambda1CustomLayer6BC07A9F": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "CompatibleArchitectures": [
          "x86_64",
          "arm64",
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
      },
      "Type": "AWS::Lambda::LayerVersion",
      "UpdateReplacePolicy": "Delete",
    },
    "KdsScaleOutLambda1LambdaFuncAlarmPermissionAB374451": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "KdsScaleOutLambda1LambdaFuncB992ECA1",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId",
        },
        "SourceArn": {
          "Fn::GetAtt": [
            "KdsDataStreamwriteProvisionedAlarmD89876F3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "KdsScaleOutLambda1LambdaFuncB992ECA1": {
      "DependsOn": [
        "KdsScaleOutLambda1LambdaFuncServiceRoleDefaultPolicy4BF8F6B3",
        "KdsScaleOutLambda1LambdaFuncServiceRoleE1B21DF0",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "DATA_STREAM_NAME": {
              "Ref": "KdsDataStream7B329BF0",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "KdsScaleOutLambda1CustomLayer6BC07A9F",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "SystemLogLevel": "WARN",
        },
        "Role": {
          "Fn::GetAtt": [
            "KdsScaleOutLambda1LambdaFuncServiceRoleE1B21DF0",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
        "Timeout": 180,
      },
      "Type": "AWS::Lambda::Function",
    },
    "KdsScaleOutLambda1LambdaFuncServiceRoleDefaultPolicy4BF8F6B3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:UpdateShardCount",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KdsDataStream7B329BF0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "KdsScaleOutLambda1LambdaFuncServiceRoleDefaultPolicy4BF8F6B3",
        "Roles": [
          {
            "Ref": "KdsScaleOutLambda1LambdaFuncServiceRoleE1B21DF0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "KdsScaleOutLambda1LambdaFuncServiceRoleE1B21DF0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "KdsScaleOutLambda1LambdaLogGroup05FE4D4C": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "KdsScaleOutLambda1LambdaFuncB992ECA1",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "KdsScaleOutLambda2CustomLayer55D28AD6": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "CompatibleArchitectures": [
          "x86_64",
          "arm64",
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
      },
      "Type": "AWS::Lambda::LayerVersion",
      "UpdateReplacePolicy": "Delete",
    },
    "KdsScaleOutLambda2LambdaFuncAlarmPermissionCC68733B": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "KdsScaleOutLambda2LambdaFuncC6EB0D2A",
            "Arn",
          ],
        },
        "Principal": "lambda.alarms.cloudwatch.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId",
        },
        "SourceArn": {
          "Fn::GetAtt": [
            "KdsDataStreamreadProvisionedAlarm3EE73403",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "KdsScaleOutLambda2LambdaFuncC6EB0D2A": {
      "DependsOn": [
        "KdsScaleOutLambda2LambdaFuncServiceRoleDefaultPolicy2A46B899",
        "KdsScaleOutLambda2LambdaFuncServiceRoleA3484CD6",
      ],
      "Properties": {
        "Architectures": [
          "arm64",
        ],
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-ap-northeast-1",
          },
          "S3Key": "HASH-REPLACED.zip",
        },
        "Environment": {
          "Variables": {
            "DATA_STREAM_NAME": {
              "Ref": "KdsDataStream7B329BF0",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "KdsScaleOutLambda2CustomLayer55D28AD6",
          },
        ],
        "LoggingConfig": {
          "LogFormat": "JSON",
          "SystemLogLevel": "WARN",
        },
        "Role": {
          "Fn::GetAtt": [
            "KdsScaleOutLambda2LambdaFuncServiceRoleA3484CD6",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
        "Timeout": 180,
      },
      "Type": "AWS::Lambda::Function",
    },
    "KdsScaleOutLambda2LambdaFuncServiceRoleA3484CD6": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "KdsScaleOutLambda2LambdaFuncServiceRoleDefaultPolicy2A46B899": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:UpdateShardCount",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KdsDataStream7B329BF0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "KdsScaleOutLambda2LambdaFuncServiceRoleDefaultPolicy2A46B899",
        "Roles": [
          {
            "Ref": "KdsScaleOutLambda2LambdaFuncServiceRoleA3484CD6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "KdsScaleOutLambda2LambdaLogGroup894B39AA": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "KdsScaleOutLambda2LambdaFuncC6EB0D2A",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "Tags": [
          {
            "Key": "StackName",
            "Value": "prod-data-str-sample-delivery-s3-stack",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
